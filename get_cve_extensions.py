import xml.etree.ElementTree as ET
import pickle
import urllib
from collections import Counter
from sets import Set
import re

prefix = '{http://scap.nist.gov/schema/vulnerability/0.4}'

# The more common file types of interest to us
file_types = ['py', 'java', 'c', 'cpp', 'class', 'h', 'php', 'go', 'js']



for year in range(2011, 2019):
	cve_urls = dict()
	tree = ET.parse('nvdcve-2.0-'+str(year)+'.xml')
	root = tree.getroot()
	for entry in root:
		cve_id = entry.attrib.get('id')
		for refs in entry.iter(prefix + 'references'):
			for ref in refs.iter(prefix+'reference'):
				url = ref.attrib.get('href')
				if url != None and 'github' in url and 'commit' in url:
					cve_urls[cve_id] = url

	#print 'Done getting links for year ' + str(year)




	cve_patches = dict()

	for cve in cve_urls:
		patch_site = urllib.urlopen(cve_urls[cve].rstrip() + '.patch')
		cve_patches[cve] = patch_site
		#print cve + ' ' + str(len(cve_patches))


	#print 'Done getting patches for year ' + str(year)
	        

	#cve_extensions = dict()
	extensions = dict()

	for cve in cve_patches:
		for line in cve_patches[cve]:
			if line.startswith('+++'):
				split_line = line.split("/")
				file_name = split_line[len(split_line)-1]
				if("." in file_name):
					extension = file_name.split(".")[1].rstrip().lower()
					if(extension not in extensions):
						extensions[extension] = 1
					else:
						extensions[extension] = extensions[extension] + 1



	#print 'Done getting extension counts for year ' + str(year)
	#print 'Writing to pickle'
	with open(str(year) + 'extension_counts.pkl', 'wb') as f:
		pickle.dump(extensions, f, protocol=pickle.HIGHEST_PROTOCOL)

	for ext in file_types:
		print 'Year: ' + str(year)
		print 'There are ' + extensions[ext] + ' files with the extension' + ext


