import xml.etree.ElementTree as ET
import pickle
import urllib
from collections import Counter
from sets import Set
import re

prefix = '{http://scap.nist.gov/schema/vulnerability/0.4}'

# The more common file types of interest to us
file_types = ['py', 'java', 'c', 'cpp', 'class', 'h', 'php', 'go', 'js']

year = 2017

with open('Exentension counts 2017', 'w+') as out:
	cve_urls = dict()
	tree = ET.parse('nvdcve-2.0-2017.xml')
	root = tree.getroot()
	for entry in root:
		cve_id = entry.attrib.get('id')
		for refs in entry.iter(prefix + 'references'):
			for ref in refs.iter(prefix+'reference'):
				url = ref.attrib.get('href')
				if url != None and 'github' in url and 'commit' in url:
					cve_urls[cve_id] = url

	print 'Done getting links for year ' + str(year)

#	cve_patches = dict()
	extensions = dict()
	count = 0
	for cve in cve_urls:
		print count
		count = count + 1
		patch_site = urllib.urlopen(cve_urls[cve].rstrip() + '.patch')
		for line in patch_site:
			if line.startswith('+++'):
				split_line = line.split("/")
				file_name = split_line[len(split_line)-1]
				if("." in file_name):
					extension = file_name.split(".")[1].rstrip().lower()
					if(extension not in extensions):
						extensions[extension] = 1
					else:
						extensions[extension] = extensions[extension] + 1



	print 'Year: ' + str(year)
	out.write('Year: ' + str(year) + '\n')
	
	for ext in file_types:
		if ext in extensions:
			print 'There are ' + str(extensions[ext]) + ' files with the extension ' + ext
			out.write('There are ' + str(extensions[ext]) + ' files with the extension ' + ext + '\n')
		else:
			print 'There are 0 files with the extension ' + ext
			out.write('There are 0 files with the extension ' + ext + '\n')

