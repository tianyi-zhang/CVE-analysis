package edu.ucla.cs.cve.download;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.List;

import org.apache.commons.io.FileUtils;

public class DownloadPatchedJavaFiles {
	public static void main(String[] args) throws IOException {
		String rootPath = "/home/troy/ONR/CVE-patches";
		String outPath = "/home/troy/ONR/CVE-Java-patches";
		File rootDir = new File(rootPath);
		File outDir = new File(outPath);
		for(File f : rootDir.listFiles()) {
			if(!f.isDirectory()) continue;
			for(File cveEntry : f.listFiles()) {
				String id = cveEntry.getName();
				for(File patch : cveEntry.listFiles()) {
					List<String> lines = FileUtils.readLines(patch, Charset.defaultCharset());
					for(String line : lines) {
						if(line.startsWith("+++ ")) {
							if(!line.contains(".")) {
								continue;
							}
							String fileExtension = line.substring(line.lastIndexOf('.'));
							if(fileExtension.equals(".java")) {
								File cveDir = new File(outDir.getAbsolutePath() + File.separator + id);
								if(!cveDir.exists()) {
									cveDir.mkdir();
								}
								
								String filePath = line.substring(6);
								String link = lines.get(0);
								String rawFileLink = link.replace("github.com", "raw.githubusercontent.com");
								rawFileLink = rawFileLink.replace("/commit/", "/");
								rawFileLink += "/" + filePath;
								String code = DownloadUtils.download(rawFileLink);
								String fileName = filePath;
								if(fileName.contains("/")) {
									fileName = fileName.substring(fileName.lastIndexOf('/') + 1);
								}
								FileUtils.write(
										new File(cveDir.getAbsolutePath() + File.separator + fileName), 
										code, Charset.defaultCharset(), false);
							}
						}
					}
				}
			}
		}
	}
}	
