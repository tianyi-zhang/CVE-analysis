package edu.ucla.cs.cve.analysis;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import edu.ucla.cs.cve.download.CVESchema;

public class CountCVEPatchPerYear {
	public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException {
		for(int year = 2002; year < 2019; year++) {
			String filePath = "/home/troy/ONR/CVE-data/nvdcve-2.0-" + year + ".xml";
			File cveFile = new File(filePath);
			DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
			dbf.setNamespaceAware(true);
			DocumentBuilder builder = dbf.newDocumentBuilder();
			Document doc = builder.parse(cveFile);
			NodeList cveEntries = doc.getDocumentElement().getElementsByTagNameNS("*", "entry");
			ArrayList<String> cves = new ArrayList<String>();
			HashMap<String, ArrayList<String>> patchUrls = new HashMap<String, ArrayList<String>>(); 
			for(int i = 0; i < cveEntries.getLength(); i++) {
				Node entry = cveEntries.item(i);
				String cveId = entry.getAttributes().getNamedItem("id").getNodeValue();
				cves.add(cveId);
				Element e = (Element)entry;
				NodeList refs = e.getElementsByTagNameNS(CVESchema.vulnNS, "reference");
				for(int j = 0; j < refs.getLength(); j++) {
					Element ref = (Element) refs.item(j);
					String link = ref.getAttribute("href");
					if(link.contains("github") && link.contains("commit")) {
						ArrayList<String> links;
						if(patchUrls.containsKey(cveId)) {
							links = patchUrls.get(cveId);
						} else {
							links = new ArrayList<String>();
						}
						
						links.add(link);
						patchUrls.put(cveId, links);
					}
				}
			}
			System.out.println(year + "," + cves.size() + "," + patchUrls.keySet().size());
		}
	}
}
