package edu.ucla.cs.cve.analysis;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;

import org.apache.commons.io.FileUtils;

public class CountCVEPatchPerLanguage {
	
	public static String getLanguageFromFileExtension(String ext) {
		switch (ext) {
		case ".c" : return "C/C++";
		case ".h" : return "C/C++";
		case ".cpp" : return "C/C++";
		case ".java" : return "Java";
		case ".php" : return "PHP";
		case ".js" : return "JavaScript";
		case ".rb" : return "Ruby";
		case ".out" : return "C/C++";
		case ".cc" : return "C/C++";
		case ".cs" : return "C#";
		case ".go" : return "GO";
		case ".html" : return "HTML";
		case ".pm" : return "Perl";
		case ".in" : return "C/C++";
		case ".am" : return "C/C++";
		case ".phpt" : return "PHP";
		case ".ac" : return "C/C++";
		case ".tpl" : return "PHP";
		case ".css" : return "HTML";
		case ".sh" : return "Shell";
		case ".sql" : return "SQL";
		default: break;
		}
		
		return "others";
	}
	
	public static void main(String[] args) throws IOException {
		String rootPath = "/home/troy/ONR/CVE-patches";
		File rootDir = new File(rootPath);
		HashMap<String, HashSet<String>> langs = new HashMap<String, HashSet<String>>();
		for(File f : rootDir.listFiles()) {
			if(!f.isDirectory()) continue;
			for(File cveEntry : f.listFiles()) {
				String id = cveEntry.getName();
				for(File patch : cveEntry.listFiles()) {
					List<String> lines = FileUtils.readLines(patch, Charset.defaultCharset());
					for(String line : lines) {
						if(line.startsWith("+++ ")) {
							int index = line.lastIndexOf('.');
							if(index >= 0) {
								String fileExtension = line.substring(index);
								String language = getLanguageFromFileExtension(fileExtension);
								HashSet<String> cves = new HashSet<String>();
								if(langs.containsKey(language)) {
									cves = langs.get(language);
								} else {
									cves = new HashSet<String>();
								}
								
								cves.add(id);
								langs.put(language, cves);
							} else {
								continue;
							}
						}
					}
				}
			}
		}
		
		for(String ext : langs.keySet()) {
			System.out.println(ext + "," + langs.get(ext).size());
		}
	}
}
