import xml.etree.ElementTree as ET
import pickle
import urllib
from collections import Counter
from sets import Set
import re


prefix = '{http://scap.nist.gov/schema/vulnerability/0.4}'

all_cves = dict()

for year in range(2002, 2019):
	all_cves[year] = dict()
	tree = ET.parse('nvdcve-2.0-'+str(year)+'.xml')
	root = tree.getroot()
	for entry in root: 
		cve_id = entry.attrib.get('id')
		for refs in entry.iter(prefix + 'references'):
			for source in refs.iter(prefix+'source'):
				if source.text == 'CONFIRM':
					for ref in refs.iter(prefix+'reference'):
						url = ref.attrib.get('href')
						if url != None and 'github' in url and 'commit' in url:
							all_cves[year][cve_id] = dict()
							all_cves[year][cve_id]["link"] = url
	print 'The number of CVES from the year ' + str(year) + ' that include a Github commit is ' + str(len(all_cves[year]))
# all_cves[year][cve_id] leads to a dict mapping to things that can be queried
# "link" maps to the github url for that cve
# ""


#with open('all_cves.pkl', 'wb') as f:
#	pickle.dump(all_cves, f, protocol=pickle.HIGHEST_PROTOCOL)

extensions = dict()

for year in all_cves:
	for cve_id in all_cves[year]:

		print 'Parsing ' + cve_id

		link = all_cves[year][cve_id]["link"]
		patch_site = urllib.urlopen(link.rstrip() + '.patch')
		all_cves[year][cve_id]["site"] = patch_site


		additions = 0
		deletions = 0

		for line in patch_site:
			if line.startswith('+++'):
				split_line = line.split("/")
				file_name = split_line[len(split_line)-1]
				if("." in file_name):
					extension = file_name.split(".")[1]
					if(extension not in extensions):
						extensions[extension] = Set()
						extensions[extension].add(cve_id)
						
					else:
						extensions[extension].add(cve_id)
						

					if("extension" not in all_cves[year][cve_id]):
						all_cves[year][cve_id]["extension"] = Set()
						all_cves[year][cve_id]["extension"].add(extension)
					else:
						all_cves[year][cve_id]["extension"].add(extension)



			elif line.startswith('+'):
				additions = additions + 1
			elif line.startswith('-') and not(line.startswith('---')):
				deletions = deletions + 1
		all_cves[year][cve_id]["additions"] = additions
		all_cves[year][cve_id]["deletions"] = deletions

with open('all_cves.pkl', 'wb') as f:
	pickle.dump(all_cves, f, protocol=pickle.HIGHEST_PROTOCOL)

with open('extension_cves', 'wb') as g:
	pickle.dump(extensions, g, protocol=pickle.HIGHEST_PROTOCOL)












